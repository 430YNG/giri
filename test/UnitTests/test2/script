#!/bin/sh

CONFIGURATION=Debug
PROJECT_DIR=$HOME/box/x86/llvm26/projects/diagnosis
OPT=$HOME/box/x86/llvm26/Debug/bin/opt
LLC=$HOME/box/x86/llvm26/Debug/bin/llc
LLVMGCC=$HOME/box/x86/llvm-gcc4/bin/llvm-gcc

#
# Create the optimized bitcode file.
#
$LLVMGCC -emit-llvm -c -o test.bc test.c
$OPT -mem2reg -mergereturn -instnamer -f -o test.opt.bc test.bc

#
# Generate the trace.
#
echo "Instrumenting Code for Dynamic Trace" 
$OPT -load $PROJECT_DIR/$CONFIGURATION/lib/libdgutility.so \
             -load $PROJECT_DIR/$CONFIGURATION/lib/libgiri.so \
             -bbnum -lsnum -trace-giri -remove-bbnum -remove-lsnum \
             -t bbrecord -f -o test.trace.bc test.opt.bc

#
# Run the program
#
echo "Compiling Code for Dynamic Trace" 
$LLC -f test.trace.bc
gcc -o test.trace test.trace.s $PROJECT_DIR/$CONFIGURATION/lib/librtgiri.a -lstdc++

echo "Running Code for Dynamic Trace" 
echo "hello" | ./test.trace a b c d

#
# Now get a backwards dynamic trace.
#
$OPT -load $HOME/box/x86/llvm26/projects/diagnosis/Debug/lib/libdgutility.so \
     -load $HOME/box/x86/llvm26/projects/diagnosis/Debug/lib/libgiri.so \
     -bbnum -lsnum -test-giri -remove-bbnum -remove-lsnum \
     -tf bbrecord -analyze -f -o /dev/null test.trace.bc

